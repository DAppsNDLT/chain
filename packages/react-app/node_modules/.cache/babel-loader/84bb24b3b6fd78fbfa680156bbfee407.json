{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.confirmSafeMessage = exports.proposeSafeMessage = exports.getSafeMessage = exports.getSafeMessages = exports.getDecodedData = exports.getMasterCopies = exports.getSafeApps = exports.getChainConfig = exports.getChainsConfig = exports.proposeTransaction = exports.postSafeGasEstimation = exports.getTransactionDetails = exports.getTransactionQueue = exports.getTransactionHistory = exports.getCollectiblesPage = exports.getCollectibles = exports.getOwnedSafes = exports.getFiatCurrencies = exports.getBalances = exports.getMultisigTransactions = exports.getModuleTransactions = exports.getIncomingTransfers = exports.getSafeInfo = exports.setBaseUrl = void 0;\n\nconst endpoint_1 = require(\"./endpoint\");\n\nconst config_1 = require(\"./config\");\n\n__exportStar(require(\"./types/safe-info\"), exports);\n\n__exportStar(require(\"./types/safe-apps\"), exports);\n\n__exportStar(require(\"./types/transactions\"), exports);\n\n__exportStar(require(\"./types/chains\"), exports);\n\n__exportStar(require(\"./types/common\"), exports);\n\n__exportStar(require(\"./types/master-copies\"), exports);\n\n__exportStar(require(\"./types/decoded-data\"), exports);\n\n__exportStar(require(\"./types/safe-messages\"), exports); // Can be set externally to a different CGW host\n\n\nlet baseUrl = config_1.DEFAULT_BASE_URL;\n/**\n * Set the base CGW URL\n */\n\nconst setBaseUrl = url => {\n  baseUrl = url;\n};\n\nexports.setBaseUrl = setBaseUrl;\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\n/**\n * Get basic information about a Safe. E.g. owners, modules, version etc\n */\n\nfunction getSafeInfo(chainId, address) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}', {\n    path: {\n      chainId,\n      address\n    }\n  });\n}\n\nexports.getSafeInfo = getSafeInfo;\n/**\n * Get filterable list of incoming transactions\n */\n\nfunction getIncomingTransfers(chainId, address, query, pageUrl) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/incoming-transfers/', {\n    path: {\n      chainId,\n      address\n    },\n    query\n  }, pageUrl);\n}\n\nexports.getIncomingTransfers = getIncomingTransfers;\n/**\n * Get filterable list of module transactions\n */\n\nfunction getModuleTransactions(chainId, address, query, pageUrl) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/module-transactions/', {\n    path: {\n      chainId,\n      address\n    },\n    query\n  }, pageUrl);\n}\n\nexports.getModuleTransactions = getModuleTransactions;\n/**\n * Get filterable list of multisig transactions\n */\n\nfunction getMultisigTransactions(chainId, address, query, pageUrl) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/multisig-transactions/', {\n    path: {\n      chainId,\n      address\n    },\n    query\n  }, pageUrl);\n}\n\nexports.getMultisigTransactions = getMultisigTransactions;\n/**\n * Get the total balance and all assets stored in a Safe\n */\n\nfunction getBalances(chainId, address, currency = 'usd', query = {}) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/balances/{currency}', {\n    path: {\n      chainId,\n      address,\n      currency\n    },\n    query\n  });\n}\n\nexports.getBalances = getBalances;\n/**\n * Get a list of supported fiat currencies (e.g. USD, EUR etc)\n */\n\nfunction getFiatCurrencies() {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/balances/supported-fiat-codes');\n}\n\nexports.getFiatCurrencies = getFiatCurrencies;\n/**\n * Get the addresses of all Safes belonging to an owner\n */\n\nfunction getOwnedSafes(chainId, address) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/owners/{address}/safes', {\n    path: {\n      chainId,\n      address\n    }\n  });\n}\n\nexports.getOwnedSafes = getOwnedSafes;\n/**\n * Get NFTs stored in a Safe\n */\n\nfunction getCollectibles(chainId, address, query = {}) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/collectibles', {\n    path: {\n      chainId,\n      address\n    },\n    query\n  });\n}\n\nexports.getCollectibles = getCollectibles;\n/**\n * Get NFTs stored in a Safe\n */\n\nfunction getCollectiblesPage(chainId, address, query = {}, pageUrl) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v2/chains/{chainId}/safes/{address}/collectibles', {\n    path: {\n      chainId,\n      address\n    },\n    query\n  }, pageUrl);\n}\n\nexports.getCollectiblesPage = getCollectiblesPage;\n/**\n * Get a list of past Safe transactions\n */\n\nfunction getTransactionHistory(chainId, address, pageUrl) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/transactions/history', {\n    path: {\n      chainId,\n      safe_address: address\n    },\n    query: {}\n  }, pageUrl);\n}\n\nexports.getTransactionHistory = getTransactionHistory;\n/**\n * Get the list of pending transactions\n */\n\nfunction getTransactionQueue(chainId, address, pageUrl, trusted) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/transactions/queued', {\n    path: {\n      chainId,\n      safe_address: address\n    },\n    query: {\n      trusted\n    }\n  }, pageUrl);\n}\n\nexports.getTransactionQueue = getTransactionQueue;\n/**\n * Get the details of an individual transaction by its id\n */\n\nfunction getTransactionDetails(chainId, transactionId) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/transactions/{transactionId}', {\n    path: {\n      chainId,\n      transactionId\n    }\n  });\n}\n\nexports.getTransactionDetails = getTransactionDetails;\n/**\n * Request a gas estimate & recommmended tx nonce for a created transaction\n */\n\nfunction postSafeGasEstimation(chainId, address, body) {\n  return (0, endpoint_1.postEndpoint)(baseUrl, '/v2/chains/{chainId}/safes/{safe_address}/multisig-transactions/estimations', {\n    path: {\n      chainId,\n      safe_address: address\n    },\n    body\n  });\n}\n\nexports.postSafeGasEstimation = postSafeGasEstimation;\n/**\n * Propose a new transaction for other owners to sign/execute\n */\n\nfunction proposeTransaction(chainId, address, body) {\n  return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/transactions/{safe_address}/propose', {\n    path: {\n      chainId,\n      safe_address: address\n    },\n    body\n  });\n}\n\nexports.proposeTransaction = proposeTransaction;\n/**\n * Returns all defined chain configs\n */\n\nfunction getChainsConfig(query) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains', {\n    query\n  });\n}\n\nexports.getChainsConfig = getChainsConfig;\n/**\n * Returns a chain config\n */\n\nfunction getChainConfig(chainId) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}', {\n    path: {\n      chainId: chainId\n    }\n  });\n}\n\nexports.getChainConfig = getChainConfig;\n/**\n * Returns Safe Apps List\n */\n\nfunction getSafeApps(chainId, query = {}) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safe-apps', {\n    path: {\n      chainId: chainId\n    },\n    query\n  });\n}\n\nexports.getSafeApps = getSafeApps;\n/**\n * Returns list of Master Copies\n */\n\nfunction getMasterCopies(chainId) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/about/master-copies', {\n    path: {\n      chainId: chainId\n    }\n  });\n}\n\nexports.getMasterCopies = getMasterCopies;\n/**\n * Returns decoded data\n */\n\nfunction getDecodedData(chainId, encodedData) {\n  return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/data-decoder', {\n    path: {\n      chainId: chainId\n    },\n    body: {\n      data: encodedData\n    }\n  });\n}\n\nexports.getDecodedData = getDecodedData;\n/**\n * Returns list of `SafeMessage`s\n */\n\nfunction getSafeMessages(chainId, address, pageUrl) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/messages', {\n    path: {\n      chainId,\n      safe_address: address\n    },\n    query: {}\n  }, pageUrl);\n}\n\nexports.getSafeMessages = getSafeMessages;\n/**\n * Returns a `SafeMessage`\n */\n\nfunction getSafeMessage(chainId, messageHash) {\n  return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/messages/{message_hash}', {\n    path: {\n      chainId,\n      message_hash: messageHash\n    }\n  });\n}\n\nexports.getSafeMessage = getSafeMessage;\n/**\n * Propose a new `SafeMessage` for other owners to sign\n */\n\nfunction proposeSafeMessage(chainId, address, body) {\n  return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/messages', {\n    path: {\n      chainId,\n      safe_address: address\n    },\n    body\n  });\n}\n\nexports.proposeSafeMessage = proposeSafeMessage;\n/**\n * Add a confirmation to a `SafeMessage`\n */\n\nfunction confirmSafeMessage(chainId, messageHash, body) {\n  return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/messages/{message_hash}/signatures', {\n    path: {\n      chainId,\n      message_hash: messageHash\n    },\n    body\n  });\n}\n\nexports.confirmSafeMessage = confirmSafeMessage;\n/* eslint-enable @typescript-eslint/explicit-module-boundary-types */","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.confirmSafeMessage = exports.proposeSafeMessage = exports.getSafeMessage = exports.getSafeMessages = exports.getDecodedData = exports.getMasterCopies = exports.getSafeApps = exports.getChainConfig = exports.getChainsConfig = exports.proposeTransaction = exports.postSafeGasEstimation = exports.getTransactionDetails = exports.getTransactionQueue = exports.getTransactionHistory = exports.getCollectiblesPage = exports.getCollectibles = exports.getOwnedSafes = exports.getFiatCurrencies = exports.getBalances = exports.getMultisigTransactions = exports.getModuleTransactions = exports.getIncomingTransfers = exports.getSafeInfo = exports.setBaseUrl = void 0;\nconst endpoint_1 = require(\"./endpoint\");\nconst config_1 = require(\"./config\");\n__exportStar(require(\"./types/safe-info\"), exports);\n__exportStar(require(\"./types/safe-apps\"), exports);\n__exportStar(require(\"./types/transactions\"), exports);\n__exportStar(require(\"./types/chains\"), exports);\n__exportStar(require(\"./types/common\"), exports);\n__exportStar(require(\"./types/master-copies\"), exports);\n__exportStar(require(\"./types/decoded-data\"), exports);\n__exportStar(require(\"./types/safe-messages\"), exports);\n// Can be set externally to a different CGW host\nlet baseUrl = config_1.DEFAULT_BASE_URL;\n/**\n * Set the base CGW URL\n */\nconst setBaseUrl = (url) => {\n    baseUrl = url;\n};\nexports.setBaseUrl = setBaseUrl;\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/**\n * Get basic information about a Safe. E.g. owners, modules, version etc\n */\nfunction getSafeInfo(chainId, address) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}', { path: { chainId, address } });\n}\nexports.getSafeInfo = getSafeInfo;\n/**\n * Get filterable list of incoming transactions\n */\nfunction getIncomingTransfers(chainId, address, query, pageUrl) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/incoming-transfers/', {\n        path: { chainId, address },\n        query,\n    }, pageUrl);\n}\nexports.getIncomingTransfers = getIncomingTransfers;\n/**\n * Get filterable list of module transactions\n */\nfunction getModuleTransactions(chainId, address, query, pageUrl) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/module-transactions/', {\n        path: { chainId, address },\n        query,\n    }, pageUrl);\n}\nexports.getModuleTransactions = getModuleTransactions;\n/**\n * Get filterable list of multisig transactions\n */\nfunction getMultisigTransactions(chainId, address, query, pageUrl) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/multisig-transactions/', {\n        path: { chainId, address },\n        query,\n    }, pageUrl);\n}\nexports.getMultisigTransactions = getMultisigTransactions;\n/**\n * Get the total balance and all assets stored in a Safe\n */\nfunction getBalances(chainId, address, currency = 'usd', query = {}) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/balances/{currency}', {\n        path: { chainId, address, currency },\n        query,\n    });\n}\nexports.getBalances = getBalances;\n/**\n * Get a list of supported fiat currencies (e.g. USD, EUR etc)\n */\nfunction getFiatCurrencies() {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/balances/supported-fiat-codes');\n}\nexports.getFiatCurrencies = getFiatCurrencies;\n/**\n * Get the addresses of all Safes belonging to an owner\n */\nfunction getOwnedSafes(chainId, address) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/owners/{address}/safes', { path: { chainId, address } });\n}\nexports.getOwnedSafes = getOwnedSafes;\n/**\n * Get NFTs stored in a Safe\n */\nfunction getCollectibles(chainId, address, query = {}) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{address}/collectibles', {\n        path: { chainId, address },\n        query,\n    });\n}\nexports.getCollectibles = getCollectibles;\n/**\n * Get NFTs stored in a Safe\n */\nfunction getCollectiblesPage(chainId, address, query = {}, pageUrl) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v2/chains/{chainId}/safes/{address}/collectibles', { path: { chainId, address }, query }, pageUrl);\n}\nexports.getCollectiblesPage = getCollectiblesPage;\n/**\n * Get a list of past Safe transactions\n */\nfunction getTransactionHistory(chainId, address, pageUrl) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/transactions/history', { path: { chainId, safe_address: address }, query: {} }, pageUrl);\n}\nexports.getTransactionHistory = getTransactionHistory;\n/**\n * Get the list of pending transactions\n */\nfunction getTransactionQueue(chainId, address, pageUrl, trusted) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/transactions/queued', { path: { chainId, safe_address: address }, query: { trusted } }, pageUrl);\n}\nexports.getTransactionQueue = getTransactionQueue;\n/**\n * Get the details of an individual transaction by its id\n */\nfunction getTransactionDetails(chainId, transactionId) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/transactions/{transactionId}', {\n        path: { chainId, transactionId },\n    });\n}\nexports.getTransactionDetails = getTransactionDetails;\n/**\n * Request a gas estimate & recommmended tx nonce for a created transaction\n */\nfunction postSafeGasEstimation(chainId, address, body) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v2/chains/{chainId}/safes/{safe_address}/multisig-transactions/estimations', {\n        path: { chainId, safe_address: address },\n        body,\n    });\n}\nexports.postSafeGasEstimation = postSafeGasEstimation;\n/**\n * Propose a new transaction for other owners to sign/execute\n */\nfunction proposeTransaction(chainId, address, body) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/transactions/{safe_address}/propose', {\n        path: { chainId, safe_address: address },\n        body,\n    });\n}\nexports.proposeTransaction = proposeTransaction;\n/**\n * Returns all defined chain configs\n */\nfunction getChainsConfig(query) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains', {\n        query,\n    });\n}\nexports.getChainsConfig = getChainsConfig;\n/**\n * Returns a chain config\n */\nfunction getChainConfig(chainId) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}', {\n        path: { chainId: chainId },\n    });\n}\nexports.getChainConfig = getChainConfig;\n/**\n * Returns Safe Apps List\n */\nfunction getSafeApps(chainId, query = {}) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safe-apps', {\n        path: { chainId: chainId },\n        query,\n    });\n}\nexports.getSafeApps = getSafeApps;\n/**\n * Returns list of Master Copies\n */\nfunction getMasterCopies(chainId) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/about/master-copies', {\n        path: { chainId: chainId },\n    });\n}\nexports.getMasterCopies = getMasterCopies;\n/**\n * Returns decoded data\n */\nfunction getDecodedData(chainId, encodedData) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/data-decoder', {\n        path: { chainId: chainId },\n        body: { data: encodedData },\n    });\n}\nexports.getDecodedData = getDecodedData;\n/**\n * Returns list of `SafeMessage`s\n */\nfunction getSafeMessages(chainId, address, pageUrl) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/messages', { path: { chainId, safe_address: address }, query: {} }, pageUrl);\n}\nexports.getSafeMessages = getSafeMessages;\n/**\n * Returns a `SafeMessage`\n */\nfunction getSafeMessage(chainId, messageHash) {\n    return (0, endpoint_1.getEndpoint)(baseUrl, '/v1/chains/{chainId}/messages/{message_hash}', {\n        path: { chainId, message_hash: messageHash },\n    });\n}\nexports.getSafeMessage = getSafeMessage;\n/**\n * Propose a new `SafeMessage` for other owners to sign\n */\nfunction proposeSafeMessage(chainId, address, body) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/safes/{safe_address}/messages', {\n        path: { chainId, safe_address: address },\n        body,\n    });\n}\nexports.proposeSafeMessage = proposeSafeMessage;\n/**\n * Add a confirmation to a `SafeMessage`\n */\nfunction confirmSafeMessage(chainId, messageHash, body) {\n    return (0, endpoint_1.postEndpoint)(baseUrl, '/v1/chains/{chainId}/messages/{message_hash}/signatures', {\n        path: { chainId, message_hash: messageHash },\n        body,\n    });\n}\nexports.confirmSafeMessage = confirmSafeMessage;\n/* eslint-enable @typescript-eslint/explicit-module-boundary-types */\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}