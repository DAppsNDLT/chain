{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SafeAppWeb3Modal = void 0;\n\nconst safe_apps_sdk_1 = __importDefault(require(\"@gnosis.pm/safe-apps-sdk\"));\n\nconst safe_apps_provider_1 = require(\"@gnosis.pm/safe-apps-provider\");\n\nconst web3modal_1 = __importDefault(require(\"web3modal\"));\n\nclass SafeAppWeb3Modal extends web3modal_1.default {\n  constructor(options, sdk) {\n    super(options);\n    this.triedToConnect = false; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    this.requestProvider = async () => {\n      if (await this.isSafeApp()) {\n        return this.getProvider();\n      }\n\n      return this.connect();\n    };\n\n    this.sdk = sdk || new safe_apps_sdk_1.default();\n  }\n\n  async getConnectedSafe() {\n    if (!this.safe && !this.triedToConnect) {\n      this.safe = await Promise.race([this.sdk.safe.getInfo(), new Promise(resolve => setTimeout(resolve, 200))]);\n      this.triedToConnect = true;\n    }\n\n    return this.safe;\n  }\n\n  async getProvider() {\n    if (!this.provider) {\n      const safe = await this.getConnectedSafe();\n      if (!safe) throw Error('Could not load Safe information');\n      this.provider = new safe_apps_provider_1.SafeAppProvider(safe, this.sdk);\n    }\n\n    return this.provider;\n  }\n\n  async isSafeApp() {\n    // check if we're in an iframe\n    if ((window === null || window === void 0 ? void 0 : window.parent) === window) {\n      return false;\n    }\n\n    const safe = await this.getConnectedSafe();\n    return !!safe;\n  }\n\n}\n\nexports.SafeAppWeb3Modal = SafeAppWeb3Modal;","map":{"version":3,"sources":["../src/modal.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,MAAA,eAAA,GAAA,eAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;;AACA,MAAA,oBAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AACA,MAAA,WAAA,GAAA,eAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AAEA,MAAa,gBAAb,SAAsC,WAAA,CAAA,OAAtC,CAA+C;AAM7C,EAAA,WAAA,CAAY,OAAZ,EAA6C,GAA7C,EAA8D;AAC5D,UAAM,OAAN;AAHM,SAAA,cAAA,GAAiB,KAAjB,CAEsD,CA0B9D;;AACO,SAAA,eAAA,GAAkB,YAAyB;AAChD,UAAI,MAAM,KAAK,SAAL,EAAV,EAA4B;AAC1B,eAAO,KAAK,WAAL,EAAP;AACD;;AACD,aAAO,KAAK,OAAL,EAAP;AACD,KALM;;AAzBL,SAAK,GAAL,GAAW,GAAG,IAAI,IAAI,eAAA,CAAA,OAAJ,EAAlB;AACD;;AAE6B,QAAhB,gBAAgB,GAAA;AAC5B,QAAI,CAAC,KAAK,IAAN,IAAc,CAAC,KAAK,cAAxB,EAAwC;AACtC,WAAK,IAAL,GAAY,MAAM,OAAO,CAAC,IAAR,CAAa,CAC7B,KAAK,GAAL,CAAS,IAAT,CAAc,OAAd,EAD6B,EAE7B,IAAI,OAAJ,CAAwB,OAAD,IAAa,UAAU,CAAC,OAAD,EAAU,GAAV,CAA9C,CAF6B,CAAb,CAAlB;AAIA,WAAK,cAAL,GAAsB,IAAtB;AACD;;AAED,WAAO,KAAK,IAAZ;AACD;;AAEgB,QAAX,WAAW,GAAA;AACf,QAAI,CAAC,KAAK,QAAV,EAAoB;AAClB,YAAM,IAAI,GAAG,MAAM,KAAK,gBAAL,EAAnB;AACA,UAAI,CAAC,IAAL,EAAW,MAAM,KAAK,CAAC,iCAAD,CAAX;AACX,WAAK,QAAL,GAAgB,IAAI,oBAAA,CAAA,eAAJ,CAAoB,IAApB,EAA0B,KAAK,GAA/B,CAAhB;AACD;;AACD,WAAO,KAAK,QAAZ;AACD;;AAUqB,QAAT,SAAS,GAAA;AACpB;AACA,QAAI,CAAA,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAM,KAAA,CAAN,GAAA,MAAM,CAAE,MAAR,MAAmB,MAAvB,EAA+B;AAC7B,aAAO,KAAP;AACD;;AAED,UAAM,IAAI,GAAG,MAAM,KAAK,gBAAL,EAAnB;AAEA,WAAO,CAAC,CAAC,IAAT;AACD;;AAjD4C;;AAA/C,OAAA,CAAA,gBAAA,GAAA,gBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SafeAppWeb3Modal = void 0;\nconst safe_apps_sdk_1 = __importDefault(require(\"@gnosis.pm/safe-apps-sdk\"));\nconst safe_apps_provider_1 = require(\"@gnosis.pm/safe-apps-provider\");\nconst web3modal_1 = __importDefault(require(\"web3modal\"));\nclass SafeAppWeb3Modal extends web3modal_1.default {\n    constructor(options, sdk) {\n        super(options);\n        this.triedToConnect = false;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.requestProvider = async () => {\n            if (await this.isSafeApp()) {\n                return this.getProvider();\n            }\n            return this.connect();\n        };\n        this.sdk = sdk || new safe_apps_sdk_1.default();\n    }\n    async getConnectedSafe() {\n        if (!this.safe && !this.triedToConnect) {\n            this.safe = await Promise.race([\n                this.sdk.safe.getInfo(),\n                new Promise((resolve) => setTimeout(resolve, 200)),\n            ]);\n            this.triedToConnect = true;\n        }\n        return this.safe;\n    }\n    async getProvider() {\n        if (!this.provider) {\n            const safe = await this.getConnectedSafe();\n            if (!safe)\n                throw Error('Could not load Safe information');\n            this.provider = new safe_apps_provider_1.SafeAppProvider(safe, this.sdk);\n        }\n        return this.provider;\n    }\n    async isSafeApp() {\n        // check if we're in an iframe\n        if ((window === null || window === void 0 ? void 0 : window.parent) === window) {\n            return false;\n        }\n        const safe = await this.getConnectedSafe();\n        return !!safe;\n    }\n}\nexports.SafeAppWeb3Modal = SafeAppWeb3Modal;\n//# sourceMappingURL=modal.js.map"]},"metadata":{},"sourceType":"script"}